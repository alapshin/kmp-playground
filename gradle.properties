# KSP
#ksp.useKSP2=true
ksp.allow.all.target.configuration=false

# https://github.com/littlerobots/version-catalog-update-plugin/pull/125
nl.littlerobots.vcu.resolver=true

#########################################
# JVM Args

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Ensure important default jvmargs aren't overwritten. See https://github.com/gradle/gradle/issues/19750
#
# For more information about how Gradle memory options were chosen:
# - Xmx - Maximum heap size. If the codebase grew it should be updated.
# - Xms - Minimum heap size, we set it to the peak measured heap size.
# - UseG1GC - If the goal is to return as much memory as possible to the machine, G1GC is the better
#   choice. It is also very nearly as fast as ParallelGC.
# - Metaspace - See https://www.jasonpearson.dev/metaspace-in-jvm-builds/
# - SoftRefLRUPolicyMSPerMB would default to 1000 which with a 4gb heap translates to ~51 minutes.
#   A value of 1 means ~4 seconds before SoftRefs can be collected, which means its realistic to
#   collect them as needed during a build that should take seconds to minutes.
# - CodeCache normally defaults to a very small size. Increasing it from platform defaults of 32-48m
#   because of how many classes can be loaded into memory and then cached as native compiled code
#   for a small speed boost.
org.gradle.jvmargs=-Dfile.encoding=UTF-8 -XX:+UseG1GC -XX:SoftRefLRUPolicyMSPerMB=1 -XX:ReservedCodeCacheSize=256m -XX:+HeapDumpOnOutOfMemoryError -Xmx2g -Xms1g

# For more information about how Kotlin Daemon memory options were chosen:
# - Kotlin JVM args only inherit Xmx, ReservedCodeCache, and MaxMetaspace. Since we are specifying
#   other args we need to specify all of them here.
# - We're using the Kotlin Gradle Plugin's default value for ReservedCodeCacheSize, if we do not then
#   the Gradle JVM arg value for ReservedCodeCacheSize will be used.
kotlin.daemon.jvmargs=-Dfile.encoding=UTF-8 -XX:+UseG1GC -XX:SoftRefLRUPolicyMSPerMB=1 -XX:ReservedCodeCacheSize=320m -XX:+HeapDumpOnOutOfMemoryError -Xmx2g -Xms1g

#########################################
# Non-default Gradle performance settings

# Gradle will use the local (and if configured, remote) build cache if true. This means that each
# step of the build that has deterministic outputs for the same inputs will be able to skip building
# in future builds. The local build cache is written to path
# `$GRADLE_USER_HOME/caches/build-cache-1`
org.gradle.caching=true
# Gradle will run in parallel mode if true.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
org.gradle.parallel=true

# Gradle will use the local configuration cache if true. This means that for each step of the
# configuration phase that has deterministic outputs for the same inputs will be able to skip
# in future builds. The local configuration cache is written to path
# `$GRADLE_PROJECT_ROOT/.gradle/configuration-cache/<hasH>`
org.gradle.configuration-cache=true
org.gradle.configuration-cache.problems=warn
# This is an experimental flag starting in Gradle 8.11 to load config cache entries in parallel.
org.gradle.configuration-cache.parallel=true
# The following would be a semicolon separated list of glob wildcard file paths to ignore file
# system checks. As of early 2024 all known issues have been addressed and this should no longer be
# necessary. I am leaving this flag here for historical documentation purposes.
# dev.gradle.configuration-cache.inputs.unsafe.ignore.file-system-checks=

#########################################
# Kotlin & MPP
kotlin.code.style=official
kotlin.incremental=true
kotlin.incremental.useClasspathSnapshot=true
kotlin.mpp.applyDefaultHierarchyTemplate=true
kotlin.mpp.enableCInteropCommonization=true
kotlin.mpp.androidSourceSetLayoutVersion=2

#########################################
# Android
studio.projectview=true

android.r8.maxWorkers=2
# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true

android.uniquePackageNames=true
# Enables namespacing of each library's R class so that its R class includes only the
# resources declared in the library itself and none from the library's dependencies,
# thereby reducing the size of the R class for that library
android.nonTransitiveRClass=true

android.defaults.buildfeatures.aidl=false
android.defaults.buildfeatures.buildconfig=false
android.defaults.buildfeatures.renderscript=false
android.defaults.buildfeatures.resvalues=false
android.defaults.buildfeatures.shaders=false
